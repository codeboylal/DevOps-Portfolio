
services:
  # React Frontend Container
  client:
    container_name: client-container
    build:
      context: ./LMS-Client
      dockerfile: Dockerfile
    ports:
      - "3000:80" 
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: "512M"
    depends_on:
      - server
    networks:
      - lms-networks 

  # Node.js Backend Container
  server:
    container_name: server-container
    build:
      context: ./LMS-Server
      dockerfile: Dockerfile
    ports:
      - "5000:5000" 
    env_file:
      - ./LMS-Server/.env
    environment:
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - mongodb
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: "2048M"
    networks:
      - lms-networks

  # MongoDB Database Container
  mongodb:
    container_name: mongodb-container
    image: mongo:5.0 
    ports:
      - "27017:27017" 
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    volumes:
      - mongodb-data:/data/db
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "1024M"
    networks:
      - lms-networks

networks:
  lms-networks:
    driver: bridge

volumes:
  mongodb-data:
