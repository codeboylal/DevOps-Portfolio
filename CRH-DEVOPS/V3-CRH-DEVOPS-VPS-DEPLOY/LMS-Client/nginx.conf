# server {
#     listen 80;

#     # Root directory for serving files
#     root /usr/share/nginx/html;
#     index index.html index.htm;

#     # Default location
#     location / {
#         try_files $uri $uri/ /index.html;
#     }

#     # Serve static assets
#     location ~* \.(js|css|png|jpg|jpeg|gif|svg|ico|woff|woff2|ttf|eot|otf|mp4|webm|ogg|avi)$ {
#         expires 7d;
#         add_header Cache-Control "public, no-transform";
#     }

#     # Logging (optional)
#     access_log /var/log/nginx/access.log;
#     error_log /var/log/nginx/error.log;
# }



# #V2

# server {
#     listen 80;
#     server_name _;

#     root /usr/share/nginx/html;
#     index index.html;

#     location / {
#         try_files $uri /index.html;
#     }

#     location /api/ {
#         proxy_pass http://server:5000/;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#     }

#     # Optional: Static asset caching
#     location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?|eot|ttf|svg|mp4)$ {
#         expires 6M;
#         access_log off;
#         add_header Cache-Control "public";
#     }
# }





server {
    listen 80;
    server_name lms-client;  # Can replace with your domain or IP address if needed

    # Serve static files from the 'LMS-Client' directory
    root /usr/share/nginx/html;  # The static assets location
    index index.html;

    # Serve the SPA or static files for the client
    location / {
        try_files $uri /index.html;  # For SPA routing
    }

    # Proxy API requests to the backend (LMS-Server running on port 5000 or another port)
    location /api/ {
        proxy_pass http://lms-server:5000/;  # Assuming 'server' is the service name in docker-compose
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

}
