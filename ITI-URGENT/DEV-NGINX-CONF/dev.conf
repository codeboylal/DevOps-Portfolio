# server {
#     listen 80;
#     server_name dev.itibuildingdesign.com.au;

#     # Redirect HTTP to HTTPS
#     return 301 https://$host$request_uri;
# }

# server {
#     listen 443 ssl;
#     server_name dev.itibuildingdesign.com.au;

#     # SSL certificates
#     ssl_certificate /etc/letsencrypt/live/dev.itibuildingdesign.com.au/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/dev.itibuildingdesign.com.au/privkey.pem;

#     # SSL settings
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;

#     # Reverse proxy for client
#     location / {
#         proxy_pass http://13.54.73.100:8098/;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#     }

#     # Reverse proxy for backend API
#     location /api/ {
#         proxy_pass http://13.54.73.100:8099/;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#     }
# }


# V2

server {
    listen 80;
    server_name dev.itibuildingdesign.com.au www.dev.itibuildingdesign.com.au;

    # Redirect HTTP to HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name dev.itibuildingdesign.com.au www.dev.itibuildingdesign.com.au;

    # SSL certificates
    ssl_certificate /etc/letsencrypt/live/dev.itibuildingdesign.com.au/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/dev.itibuildingdesign.com.au/privkey.pem;

    # SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # General headers for better security
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Reverse proxy for frontend (client)
    location / {
        proxy_pass http://13.54.73.100:8098/; # Ensure the IP is correct
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;

        # Optional: WebSocket support
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Reverse proxy for backend API
    location /api/ {
        proxy_pass http://13.54.73.100:8099/; # Ensure the IP is correct
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;

        # Optional: WebSocket support
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
